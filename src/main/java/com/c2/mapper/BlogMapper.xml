<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.c2.mapper.BlogMapper">
    <resultMap id="authorResult" type="com.c2.BlogModel.Author">
        <id property="id" column="id"/>
        <result property="username" column="author_username"></result>
        <result property="password" column="author_password"/>
        <result property="email" column="author_email"/>

    </resultMap>
    <select id="selectComment" resultType="Comment">
        select id,content from comment where post_id=#{post_id}
    </select>
    <resultMap id="detailedBlogResultMap" type="Blog">
        <constructor>
            <idArg column="id" javaType="int"/>
        </constructor>
        <result property="title" column="blog_title"/>
        <association property="author" resultMap="authorResult"/>
        <collection property="posts" ofType="Post">
            <id property="id" column="post_id"/>
            <result property="content" column="post_content"/>
            <collection property="comments" column="post_id" javaType="ArrayList" ofType="Post" select="selectComment"/>
            <discriminator javaType="int" column="draft">
                <case value="1" resultType="DraftPost"></case>
            </discriminator>
        </collection>

    </resultMap>
    <select id="selecBlogDetails" resultMap="detailedBlogResultMap">
               select B.id as blog , B.title as blog_title , B.author_id as blog_author_id,
A.id as author_id, A.username as author_username ,
A.password as author_password, A.email as author_email , P.id as post_id,
P.blog_id as post_blog_id, P.content as post_content , P.draft as draft
from Blog B
left outer join Author A on B.author_id= A.id
left outer join Post P on B.id = P.blog_id
where B.id = #{id}


    </select>

</mapper>